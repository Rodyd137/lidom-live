name: scrape-lidom

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/2 * * * *"   # GitHub Actions corre en UTC

permissions:
  contents: write

concurrency:
  group: scrape-lidom
  cancel-in-progress: true

env:
  TZ: America/Santo_Domingo
  SOURCE_HOME: https://pelotainvernal.com/
  # Control de detalle para scraper.mjs
  DETAILS_FETCH: recent         # recent | all | none
  DETAILS_DAYS: "14"
  DETAILS_CONCURRENCY: "4"
  DETAILS_STATUSES: "2,4,5,6"   # LIVE, DELAYED, SUSPENDED, FINAL

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Re-auth remote with token
        run: git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run scraper
        run: node scraper.mjs

      - name: Validate JSON
        run: |
          jq . docs/latest.json > /dev/null
          jq . docs/live.json > /dev/null
          f=$(ls -1 docs/games/*.json 2>/dev/null | head -n1 || true)
          if [ -n "$f" ]; then jq . "$f" > /dev/null; fi

      - name: Commit changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || true
          if ! git diff --quiet -- docs/; then
            git add docs/
            TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            git commit -m "chore: update LIDOM data ${TS} [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
