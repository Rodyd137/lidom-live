name: lidom-live-minute

on:
  schedule:
    - cron: "* * * * *"   # cada 1 minuto (UTC)
  workflow_dispatch: {}

permissions:
  contents: write

# Un solo “canal” de ejecución para evitar pisarnos con el otro workflow
concurrency:
  group: lidom-data
  cancel-in-progress: true

env:
  TZ: America/Santo_Domingo
  SOURCE_HOME: https://pelotainvernal.com/
  # Igual que el scraper normal
  DETAILS_FETCH: recent
  DETAILS_DAYS: "14"
  DETAILS_CONCURRENCY: "4"
  DETAILS_STATUSES: "2,4,5,6"   # LIVE, DELAYED, SUSPENDED, FINAL

jobs:
  live_minutely:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Gate 1 (opcional): ventana horaria local típica (reduce ejecuciones innecesarias)
      - name: Skip fuera de 16:00-23:59 AST
        run: |
          H=$(TZ=America/Santo_Domingo date +%H)
          if [ "$H" -lt 16 ] || [ "$H" -gt 23 ]; then
            echo "Fuera de ventana habitual -> skip"; exit 78
          fi

      # Gate 2: si ya tenemos latest.json y NO hay juegos live-like, salimos rápido
      - name: Saltar si no hay juegos en vivo según el último snapshot
        run: |
          if [ -f docs/latest.json ]; then
            if jq -e '
              ((.games.today // []) | map(.status) | map(tonumber))
              | any(. == 2 or . == 4 or . == 5)
            ' docs/latest.json > /dev/null; then
              echo "Hay juegos live/delayed/suspended -> actualizamos"
            else
              echo "Sin juegos live en el último snapshot -> skip"; exit 78
            fi
          else
            echo "No existe docs/latest.json aún -> corremos para generarlo"
          fi

      # Ejecuta el mismo scraper: este ya escribe docs/live.json en cada corrida
      - name: Run scraper (minutely)
        run: node scraper.mjs

      - name: Validate live.json
        run: |
          jq . docs/live.json > /dev/null
          jq . docs/latest.json > /dev/null

      - name: Commit changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || true
          if ! git diff --quiet -- docs/; then
            git add docs/
            TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            git commit -m "chore: live minute tick ${TS} [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

